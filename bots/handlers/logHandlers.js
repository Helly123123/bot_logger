function registerLogHandlers(bot, logSubscribers, sendLog) {
  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ª–æ–≥–∏
  bot.onText(/\/subscribe_logs/, (msg) => {
    const chatId = msg.chat.id;

    if (logSubscribers.has(chatId)) {
      bot.sendMessage(chatId, "‚úÖ –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤!");
    } else {
      logSubscribers.add(chatId);
      bot.sendMessage(chatId, "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤!");
      sendLog({
        level: "INFO",
        message: "–ù–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫ –Ω–∞ –ª–æ–≥–∏",
        source: "Telegram Bot",
        additionalData: { chatId },
      });
    }
  });

  // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç –ª–æ–≥–æ–≤
  bot.onText(/\/unsubscribe_logs/, (msg) => {
    const chatId = msg.chat.id;

    if (logSubscribers.has(chatId)) {
      logSubscribers.delete(chatId);
      bot.sendMessage(chatId, "‚úÖ –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤.");
    } else {
      bot.sendMessage(chatId, "‚ùå –í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –ª–æ–≥–∏.");
    }
  });

  // –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥
  bot.onText(/\/test_log/, (msg) => {
    const chatId = msg.chat.id;

    sendLog({
      level: "TEST",
      message: "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –±–æ—Ç–∞",
      source: "Test Command",
      additionalData: {
        chatId,
        username: msg.chat.username,
        testData: { value: 42, text: "test" },
      },
    });

    bot.sendMessage(chatId, "üì® –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
  });

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤
  bot.onText(/\/log_stats/, (msg) => {
    const chatId = msg.chat.id;

    bot.sendMessage(
      chatId,
      `
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–≥–µ—Ä–∞:**
üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: ${logSubscribers.size}
üí¨ –í–∞—à chatId: ${chatId}
${
  process.env.LOG_CHAT_ID
    ? `üì® –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç: ${process.env.LOG_CHAT_ID}`
    : "‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}
        `.trim()
    );
  });
}

module.exports = {
  registerLogHandlers,
};
